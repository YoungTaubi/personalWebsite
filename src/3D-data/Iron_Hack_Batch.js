/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef, useState } from 'react'
import { useGLTF } from '@react-three/drei'
import { MeshNormalMaterial } from 'three';
import { useFrame } from '@react-three/fiber';

export default function Model({ workExperienceYPos }) {

  const [executed, setExecuted] = useState(false)
  const group = useRef()
  const batchRef = useRef()
  const { nodes, materials } = useGLTF('/Iron-Hack-Batch-Compressed.glb')
  // console.log(materials);
  const normalMaterial = new MeshNormalMaterial()

  let velocity = 0
  let accelleration = 0.1
  let speed = 0;
  let travel = 0

  function move() {
    const id = setInterval(frame, 5);
    function frame() {
      velocity += accelleration
      speed += velocity;
      travel += speed
      if (travel > 400) {
        
        velocity += accelleration
        speed -= velocity;
        if (speed < 0) {
          speed = 0
          velocity = 0
          travel = 0
          clearInterval(id)
        }
      } 
    }
  }

  

  

  useFrame(() => {
    // console.log(executed);
    if (window.scrollY > workExperienceYPos && !executed) {
      move()
      setTimeout(() => {setExecuted(true)}, 500)
    }
    // console.log(window.scrollY);
    batchRef.current.position.y -= speed

  })

  const flyAnimation = () => {

  }

  return (
    <group ref={group} dispose={null} scale={0.05} rotation={[-0.5, -0.5, -0.2]} position={[5, -1, -4]}>
      {/* <mesh geometry={nodes.Cube.geometry} material={materials.Material} /> */}
      <mesh geometry={nodes['20220428_Iron_Crypto_Logo'].geometry} material={normalMaterial} rotation={[Math.PI / 2, 0, 0]} ref={batchRef} />
    </group>


  )
}

useGLTF.preload('/Iron-Hack-Batch-Compressed.glb')
